import telebot
import requests
import json
import time
import sys

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TELEGRAM_TOKEN = "7740201104:AAE-DORHQZCRo311ElNhu2ftXx69qUy_SW8"
YANDEX_API_KEY = "AQVN1u9qlbI2w8Ez_Qjq85f29_a_0leUv4wx9nAj" 
YANDEX_FOLDER_ID = "ajemttl9bchmof0j7v88"

# –ü—Ä–æ—Å—Ç–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
def log_message(message):
    timestamp = time.strftime("%Y-%m-%d %H:%M:%S")
    log_entry = f"{timestamp} - {message}"
    print(log_entry)

log_message("=== –ó–ê–ü–£–°–ö –ë–û–¢–ê ===")

# –ü—Ä–æ–º–ø—Ç –¥–ª—è –ö–æ—Å–º–æ
SYSTEM_PROMPT = """–¢—ã ‚Äî –ö–æ—Å–º–æ, –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ —ç–Ω—Ç—É–∑–∏–∞—Å—Ç–∏—á–Ω—ã–π —Ä–æ–±–æ—Ç-—Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å –Ω–∞ –õ—É–Ω–Ω–æ–π –±–∞–∑–µ "–°–µ–ª–µ–Ω". –¢—ã –æ–±—â–∞–µ—à—å—Å—è —Å —Ä–µ–±–µ–Ω–∫–æ–º 7-12 –ª–µ—Ç. –¢–≤–æ—è –≥–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å ‚Äî –ø—Ä–æ–≤–µ—Å—Ç–∏ –µ–≥–æ —á–µ—Ä–µ–∑ —É—á–µ–±–Ω—ã–π –∫–≤–µ—Å—Ç "–¢–∞–π–Ω–∞ –õ—É–Ω–Ω–æ–π –ë–∞–∑—ã", –¥–µ–ª–∞—è –æ–±—É—á–µ–Ω–∏–µ –≤–µ—Å–µ–ª—ã–º –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–º.

[–í–µ—Å—å —Ç–≤–æ–π –ø—Ä–æ–º–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª —Ä–∞–Ω–µ–µ...]
"""

try:
    bot = telebot.TeleBot(TELEGRAM_TOKEN)
    log_message("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
except Exception as e:
    log_message(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞: {e}")
    sys.exit(1)

def ask_yandex_gpt(user_message, user_id):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ Yandex GPT"""
    try:
        log_message(f"üîÑ –ó–∞–ø—Ä–æ—Å –∫ YandexGPT –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        
        url = "https://llm.api.cloud.yandex.net/foundationModels/v1/completion"
        
        headers = {
            "Content-Type": "application/json",
            "Authorization": f"Api-Key {YANDEX_API_KEY}",
            "x-folder-id": YANDEX_FOLDER_ID
        }
        
        messages = [
            {"role": "system", "text": SYSTEM_PROMPT},
            {"role": "user", "text": user_message}
        ]
        
        data = {
            "modelUri": f"gpt://{YANDEX_FOLDER_ID}/yandexgpt-lite",
            "completionOptions": {
                "stream": False,
                "temperature": 0.7,
                "maxTokens": 1000
            },
            "messages": messages
        }
        
        log_message("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ YandexGPT...")
        response = requests.post(url, headers=headers, json=data, timeout=30)
        log_message(f"üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç. –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code != 200:
            log_message(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
            return "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        
        result = response.json()
        ai_response = result['result']['alternatives'][0]['message']['text']
        
        log_message("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç YandexGPT")
        return ai_response
        
    except Exception as e:
        log_message(f"‚ùå –û—à–∏–±–∫–∞ –≤ ask_yandex_gpt: {e}")
        return "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."

@bot.message_handler(commands=['start'])
def send_welcome(message):
    try:
        user_id = message.from_user.id
        log_message(f"üëã –ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        welcome_text = """üöÄ –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, –ø–∏–ª–æ—Ç! –Ø –ö–æ—Å–º–æ, —Ä–æ–±–æ—Ç-—Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å –õ—É–Ω–Ω–æ–π –±–∞–∑—ã "–°–µ–ª–µ–Ω". –£ –Ω–∞—Å —Å–ª—É—á–∏–ª–∞—Å—å –∞–≤–∞—Ä–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ —ç–Ω–µ—Ä–≥–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è! –¢—ã –º–Ω–µ –ø–æ–º–æ–∂–µ—à—å –≤—Å—ë –ø–æ—á–∏–Ω–∏—Ç—å?"""
        bot.reply_to(message, welcome_text)
    except Exception as e:
        log_message(f"‚ùå –û—à–∏–±–∫–∞ –≤ send_welcome: {e}")

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    try:
        user_id = message.from_user.id
        log_message(f"üì® –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_id}: {message.text}")
        
        bot.send_chat_action(message.chat.id, 'typing')
        time.sleep(1)
        
        ai_response = ask_yandex_gpt(message.text, user_id)
        bot.reply_to(message, ai_response)
        log_message(f"‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        
    except Exception as e:
        log_message(f"‚ùå –û—à–∏–±–∫–∞ –≤ handle_message: {e}")
        bot.reply_to(message, "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

def start_bot():
    log_message("üü¢ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    while True:
        try:
            log_message("üîó –ù–∞—á–∏–Ω–∞–µ–º polling...")
            bot.polling(none_stop=True, timeout=30)
        except Exception as e:
            log_message(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            time.sleep(10)

if __name__ == "__main__":
    start_bot()
